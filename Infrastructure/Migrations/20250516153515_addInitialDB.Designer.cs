// <auto-generated />
using System;
using Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(PersistenceContext))]
    [Migration("20250516153515_addInitialDB")]
    partial class addInitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblAgencies", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cra 12 #45-67",
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2108),
                            CreatedBy = "seed",
                            Name = "Bogota",
                            Phone = "3001234567"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Cra 55 #50-67",
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2111),
                            CreatedBy = "seed",
                            Name = "Medellin",
                            Phone = "3001234568"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TblBookings", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2307),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2309),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2310),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2311),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2312),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 2,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2314),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 3,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2315),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 4,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2316),
                            CreatedBy = "seed",
                            EmployeeId = 0,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.BookingEmployeePerDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingsNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("day")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TblBookingEmployeePerDays", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblClients", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2247),
                            CreatedBy = "seed",
                            Email = "carlos@example.com",
                            FullName = "Carlos Pérez",
                            Phone = "3109876543"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2248),
                            CreatedBy = "seed",
                            Email = "maria.fernandez@example.com",
                            FullName = "María Fernández",
                            Phone = "3112345678"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2249),
                            CreatedBy = "seed",
                            Email = "juan.rodriguez@example.com",
                            FullName = "Juan Rodríguez",
                            Phone = "3123456789"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2251),
                            CreatedBy = "seed",
                            Email = "laura.mendez@example.com",
                            FullName = "Laura Méndez",
                            Phone = "3134567890"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.ToTable("TblEmployees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgencyId = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2265),
                            CreatedBy = "seed",
                            FullName = "Ana Torres",
                            Position = "Asesor"
                        },
                        new
                        {
                            Id = 2,
                            AgencyId = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2266),
                            CreatedBy = "seed",
                            FullName = "David Gómez",
                            Position = "Asesor"
                        },
                        new
                        {
                            Id = 3,
                            AgencyId = 2,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2267),
                            CreatedBy = "seed",
                            FullName = "Santiago Ruiz",
                            Position = "Asesor"
                        },
                        new
                        {
                            Id = 4,
                            AgencyId = 2,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2290),
                            CreatedBy = "seed",
                            FullName = "Camila López",
                            Position = "Asesor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingValuePerDay")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("TblVehicles", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingValuePerDay = 100000,
                            Brand = "Toyota",
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2230),
                            CreatedBy = "seed",
                            Model = "Corolla",
                            PlateNumber = "ABC123",
                            VehicleTypeId = 1,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            BookingValuePerDay = 150000,
                            Brand = "Mazda",
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2232),
                            CreatedBy = "seed",
                            Model = "CX-5",
                            PlateNumber = "XYZ789",
                            VehicleTypeId = 2,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("Domain.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblVehicleTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2208),
                            CreatedBy = "seed",
                            Name = "Sedán"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2209),
                            CreatedBy = "seed",
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 35, 15, 496, DateTimeKind.Utc).AddTicks(2211),
                            CreatedBy = "seed",
                            Name = "Camioneta"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Booking", b =>
                {
                    b.HasOne("Domain.Entities.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Domain.Entities.BookingEmployeePerDay", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("BookingEmployeePerDay")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Agency", "Agency")
                        .WithMany("Employees")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("Domain.Entities.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Domain.Entities.Agency", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Navigation("BookingEmployeePerDay");

                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Domain.Entities.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
